"""empty message

Revision ID: d4358889d7fa
Revises: 
Create Date: 2023-05-10 11:40:51.827113

"""
from alembic import op
import sqlalchemy as sa, inspect
from sqlalchemy.engine import reflection


# revision identifiers, used by Alembic.
revision = 'd4358889d7fa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=125), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=60), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_posts_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_posts'))
    )
    op.create_table('visualizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=60), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(length=60), nullable=False),
    sa.Column('dimension', sa.String(), nullable=False),
    sa.Column('parameters', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('fk_visualizations_post_id_posts')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_visualizations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_visualizations'))
    )
    # ### end Alembic commands ###



def downgrade():
    # Get table information
    inspector = reflection.Inspector.from_engine(op.get_bind())

    # Check if the table exists before dropping
    if 'visualizations' in inspector.get_table_names():
        op.drop_table('visualizations')

    if 'posts' in inspector.get_table_names():
        op.drop_table('posts')
        
    if 'users' in inspector.get_table_names():
        op.drop_table('users')